name: Python package

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: pip install poetry
      - name: Cache virtual environment
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: pytest
        run: poetry run pytest --cov=mimesis
      - name: mypy
        run: poetry run mypy mimesis/ tests/
      - name: pyroma
        run: poetry run pyroma -d .
      - name: codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: poetry run codecov --token ${{ env.CODECOV_TOKEN }}

  deploy:
    if: ${{ github.ref == 'ref/head/master' }}
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - run: |
          poetry python setup.py minify
          poetry run check-manifest
          poetry run python setup.py check --restructuredtext --strict
      - name: Publish
        env:
          PYPI_USERNAME: lk-geimfari
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          poetry build
          poetry publish --username ${{ env.PYPI_USERNAME }} --password ${{ env.PYPI_PASSWORD }}
